/***************************************************************************************
 * SBS Default CSS                                                                     *
 * http://www.sbs.ch/                                                                  *
 *                                                                                     *
 * Author: Mischa Kuenzle <mischa.kuenzle@sbs.ch>                                      *
 * Author: Christian Egli <christian.egli@sbs.ch>                                      *
 * Author: Bert Frees <bertfrees@gmail.com>                                            *
 *                                                                                     *
 * See also Braille CSS: http://snaekobbi.github.io/braille-css-spec/master/index.html *
 ***************************************************************************************/

/* Helper functions */

/* http://stackoverflow.com/a/38713737 */
@function repeat($char, $n) {
    $c:"";
    @for $i from 1 through $n {
        $c: $c + $char;
    }
    @return $c;
}

/* General rules */

/* Namespaces */

@namespace xml url(http://www.w3.org/XML/1998/namespace);
@namespace brl url(http://www.daisy.org/z3986/2009/braille/);
@namespace epub url(http://www.idpf.org/2007/ops);

/* Page layout
 *
 * A page contains 28 columns by 28 rows of braille (configurable with
 * options, defaults in script). */

@page {
    @if ($footnotes-placement == 'standard') {
        @footnotes {
	    border-top: ⠒;
	    content: flow(footnotes);
        }
    }
}

@page frontmatter:right {
    margin-bottom: 1;
    @bottom-center {
	content: string(running-footer-front);
    }
}

@page toc:right {
    margin-bottom: 1;
    @bottom-center {
	content: "Inhaltsverzeichnis";
    }
    @bottom-right {
	content: counter(page, upper-roman);
	text-transform: roman-num;
    }
}

@if $show-print-page-numbers {
    @page bodymatter:right {
        margin-bottom: 1;
        @bottom-left {
	    content: string(print-page-slash, spread-start-except-last) string(print-page, spread-last);
	    text-transform: print-page;
        }
        @bottom-center {
            content: string(running-footer-body);
	}
    }
}
@else {
    @if $levels-in-footer >= 1 {
	@page bodymatter:right {
            margin-bottom: 1;
            @bottom-left {
		content: "⠒⠒⠒ " string(running-footer-body);
	    }
	}
    }
    @else {
        @page bodymatter:right {
            margin-bottom: 0;
        }
    }
}

@if $show-braille-page-numbers {
    @page bodymatter:right {
        @bottom-right {
            @if $levels-in-footer == 0 {
                content: "     " counter(page);
            }
            @else {
                content: counter(page);
            }     
        }
    }
}


@for $level from 1 through 6 {
    @if $levels-in-footer >= $level {
        bodymatter,
        /*body|section*/ [epub|type~='bodymatter'] {
            h#{$level} {
                &:not(:has(> brl|select)) {
                    string-set: running-footer-body content();
                }
                > brl|select {
                    &:not(:has(> brl|running-line)) > brl|otherwise {
                        string-set: running-footer-body content();
                    }
                    > brl|running-line {
                        string-set: running-footer-body content();
                    }
                }
            }
        }
    }
}

brl|volume[brl|grade='#{$contraction-grade}'] {
   display:block;
   volume-break-before:always;
}

@volume {
    @begin {
	page:auto;
	content: flow(cover) flow(volume-toc);
    }
    @if ($footnotes-placement == 'end-of-volume') {
        @end {
            page: auto;
            content: flow(volume-notes-title) flow(volume-notes, volume);
        }
    }
}

@volume:first {
    @begin {
	content: flow(cover) flow(frontmatter) flow(document-toc);
    }
}

@if ($footnotes-placement == 'end-of-book') {
    @volume:last {
        @end {
            page: auto;
            content: flow(endnotes-container);
        }
    }
}

/* Downgrading indicators */

@text-transform downgrade {
    system: -sbs-indicators;
    single-word: "'.";
    open: "-.";
    close: "'.";
}

@if $contraction-grade == 2 {
    
    span[brl|grade='0'] {
        text-transform: downgrade grade-0;
    }
    
    span[brl|grade='1'] {
        text-transform: downgrade grade-1;
    }
    
    blockquote,
    div,
    epigraph,
    [epub|type~='epigraph'],
    poem,
    [epub|type~='z3998:poem'] {
        &[xml|lang]:not([xml|lang=de]) {
            text-transform: downgrade grade-0;
        }
    }
    
} @else {
    
    span[brl|grade='0'] {
        text-transform: grade-0;
    }
    
    span[brl|grade='1'] {
        text-transform: grade-1;
    }
    
    blockquote,
    div,
    epigraph,
    [epub|type~='epigraph'],
    poem,
    [epub|type~='z3998:poem'] {
        &[xml|lang]:not([xml|lang=de]) {
            text-transform: grade-0;
        }
    }
}

/* Table of contents */

#generated-document-toc,
#generated-volume-toc {
    page: toc;
    counter-set: page 1;
}

#generated-document-toc::-obfl-on-toc-start,
#generated-volume-toc::-obfl-on-toc-start::before {
    display: block;
    content: 'Inhaltsverzeichnis';
    text-align: center;
    text-indent:0;
    margin-top:1;
    margin-left:4;
    margin-right:4;
    margin-bottom:1;
    -obfl-underline:⠤;
    page-break-before: always;
}

#generated-document-toc::-obfl-on-volume-start {
    display: block;
    content: -obfl-evaluate('(if (> $volumes 1) " Band" "")');
    text-align: center;
    text-indent:0;
    margin-top:1;
    margin-bottom:1;
    &::before {
	content: -obfl-evaluate('(if (> $volumes 1) $started-volume-number "")');
	text-transform: volume;
    }
}

#generated-volume-toc::-obfl-on-toc-start::after {
    display: block;
    content: -obfl-evaluate('(if (> $volumes 1) " Band" "")');
    text-align: center;
    margin-top:1;
    margin-bottom:1;
    &::before {
        content: -obfl-evaluate('(if (> $volumes 1) $volume "")');
        text-transform: volume;
    }
}

#generated-document-toc::-obfl-on-volume-end {
    display: block;
    text-align: center;
    text-indent:0;
    margin-top:1;
    margin-bottom:1;
}

#generated-document-toc::-obfl-on-toc-end,
#generated-volume-toc::-obfl-on-toc-end {
    display: block;
    text-align: center;
    text-indent:0;
    content: '⠒⠒⠒⠒⠒⠒⠒⠒⠒⠒⠒⠒';
    margin-top:1;
    margin-bottom:1;
    text-transform: none;
    hyphens: initial;
}

#generated-volume-toc,
#generated-document-toc {
    li {
        display: block;
        a {
            brl|otherwise {
                display: inline;
            }
            &:has(brl|toc-line) {
                brl|toc-line {
                    display: inline;
                    /* Depends on handle-toc-and-running-line.xsl (see below) */
                    ~ brl|otherwise {
                        display: none;
                    }
                }
            }
            &::after {
                content: " " leader('⠄') " ⠼";
                hyphens: initial;
                &::after {
                    &::before {
                        content: target-string(attr(href), print-page);
                        text-transform: toc-print-page;
                    }
                    &::after {
                        content: target-counter(attr(href), page);
                        text-transform: toc-page;
                    }
                }
            }
        }
    }
}

/* Hidden elements
 *
 * These are not directly incldued in the output. */

head {
    display: none;
}

doctitle {
    display: none;
    string-set: doctitle content();
}

docauthor {
    display: none;
    string-set: docauthor content();
}

/* Footnotes */

dtbook {
    counter-reset: footnote 0;
}

note {
    display: none;
}

note p {
    display: inline;
}

noteref {
    flow: null;
    counter-increment: footnote;
    
    /* footnote-call doesn't work */
    &::alternate {
        display: inline;
        content: '*' counter(footnote);
        &::alternate {
            display: block;
            content: '⠠⠔' counter(footnote) ' ' target-content(attr(idref));
            text-indent: -2;
            margin-left: 2;
            @if ($footnotes-placement == 'standard') {
                flow: footnotes;
            } @else if ($footnotes-placement == 'end-of-chapter') {
                flow: chapter-notes;
            } @else if ($footnotes-placement == 'end-of-volume') {
                flow: volume-notes;
            } @else if ($footnotes-placement == 'end-of-book') {
                flow: endnotes;
            }
        }
    }
}

@if ($footnotes-placement == 'end-of-chapter') {
    level1,
    level2,
    level3,
    level4,
    level5,
    level6 {
        &:has(noteref)::after {
            content: flow(chapter-notes);
            &::before {
                display: block;
                margin-top: 1;
                -obfl-underline: ⠒;
                content: 'Anmerkungen';
                text-transform: auto;
            }
        }
    }
} @else if ($footnotes-placement == 'end-of-volume') {
    book:has(noteref)::alternate {
        flow: volume-notes-title;
        display: block;
        margin-top: 1;
        -obfl-underline: ⠒;
        content: 'Anmerkungen';
        text-transform: auto;
    }
} @else if ($footnotes-placement == 'end-of-book') {
    book:has(noteref)::alternate {
        display: -obfl-list-of-references;
        flow: endnotes-container;
        content: -obfl-collection(endnotes);
        hyphens: manual;
        text-transform: none;
        &::-obfl-on-volume-start {
            display: block;
            -obfl-underline: ⠒;
            page-break-after: avoid;
            content: 'Anmerkungen' -obfl-evaluate('(if (> $volumes 1) (concat " Band " $started-volume-number) "")');
            text-transform: auto;
        }
        /* because skip-margin-top-of-page=true currently does not work for margin-top on -obfl-on-volume-start */
        &::-obfl-on-volume-end {
            display: block;
            content: ' ';
        }
    }
}

.pageref {
    flow: null;
}

.pageref::alternate {
    display: inline;
    content: target-counter(attr(href), page);
}

a:empty {
    display: none;
}

brl|select,
brl|when-braille,
brl|literal{
    display: inline;
}

brl|otherwise{
    display: none;
}

/*
 * Depends on handle-toc-and-running-line.xsl, which wraps
 * brl:toc-line and brl:running-line elements in a brl:select, and in
 * addition wraps the surrounding nodes in a brl:otherwise within the
 * same brl:select:
 * ~~~
 * <h1>
 *   blah blah blah blah blah blah blah
 *   <brl:toc-line>blah</brl:toc-line>
 *   <brl:running-line>blah</brl:running-line>
 * </h1>
 * ~~~
 * in the input becomes:
 * ~~~
 * <h1>
 *   <brl:select>
 *     <brl:toc-line>blah</brl:toc-line>
 *     <brl:running-line>blah</brl:running-line>
 *     <brl:otherwise>
 *       blah blah blah blah blah blah blah
 *     </brl:otherwise>
 *   </brl:select>
 * </h1>
 * ~~~
 * before any CSS is applied.
 */
h1, h2, h3, h4, h5, h6 {
    brl|toc-line, brl|running-line { ~ brl|otherwise {
        display: inline;
    }}
}

/* Headings */

h1 {
    display: block;
    text-align: center;
    margin-left: 4;
    margin-right: 4;
    padding-top: 1;
    -obfl-underline: ⠤;
    margin-bottom: 1;
    page-break-after: avoid;
    hyphens: none;
}

h2 {
    display: block;
    margin-right: 4;
    text-align: left;
    -obfl-underline: ⠒;
    page-break-after: avoid;
    hyphens: none;
}

h3 {
    display: block;
    margin-right: 4;
    text-align: left;
    -obfl-underline: ⠂;
    page-break-after: avoid;
    hyphens: none;
}

h4, h5, h6 {
    display: block;
    margin-right: 4;
    text-align: left;
    page-break-after: avoid;
    hyphens: none;
}

hd, bridgehead {
    display: block;
    margin-right: 4;
    text-align: left;
    margin-top: 1;
    page-break-after: avoid;
    hyphens: none;
}

brl|running-line, brl|toc-line, brl|otherwise {
    display:none;
}

sidebar > hd {
    display: block;
    margin-top:0;
    page-break-after: avoid;
}

/* Divisions */

frontmatter > level1:not(#cover-recto, #cover-verso) {
    page-break-before: right;
}

/*body|section*/[epub|type~='frontmatter']:not(#cover-recto, #cover-verso) {
    page-break-before: right;
}

frontmatter > level1:has(> level2),
/*body|section*/[epub|type~='frontmatter']:has(> section) {
    string-set: running-footer-front "Klappentexte";
}

frontmatter > level1.toc,
/*body|section*/[epub|type~='frontmatter'].toc {
    display: none;
}


bodymatter > level1,
rearmatter > level1 {
    page-break-before:always;
}

brl|volume + level1 {
    page-break-before: auto;
}

level1 {
    display: block;
}


level2 {
    display:block;
    margin-top:2;
    orphans:10;
}

level3 {
    display:block;
    margin-top:1;
    orphans:7;
}

level4, level5, level6 {
    display:block;
    margin-top:1;
    orphans:4;
}

/*body|section*/[epub|type~='frontmatter'],
/*body|section*/[epub|type~='bodymatter'],
/*body|section*/[epub|type~='rearmatter'] {
    page-break-before: always;
    > section:not([epub|type~='z3998:poem']) {
        display: block;
        margin-top:2;
        orphans:10;
        > section:not([epub|type~='z3998:poem']) {
            display: block;
            margin-top:1;
            orphans:7;
            section:not([epub|type~='z3998:poem']) {
                display: block;
                margin-top:1;
                orphans:4;
            }
        }
    }   
}

bodymatter,
rearmatter,
/*body|section*/[epub|type~='bodymatter'],
/*body|section*/[epub|type~='rearmatter'] {
    display: block;
}

frontmatter,
/*body|section*/[epub|type~='frontmatter'] {
    display: none;
}

/* doctitle and docauthor are skipped, #cover-recto, #cover-verso and.titlepage are moved
 * to the "cover" flow. If the frontmatter has no other child elements, skip it.
 */
frontmatter,
/*body|section*/[epub|type~='frontmatter'] {
    &:has(> *:not(doctitle, docauthor, #cover-recto, #cover-verso, .titlepage)) {
        display: block;
        page: frontmatter;
        flow: frontmatter;
    }
}

frontmatter level2,
/*body|section*/[epub|type~='frontmatter'] > section:not([epub|type~='z3998:poem']) {
    display: block;
    margin-top:1;
    orphans:4;
    &:first-child h2 {
        padding-top:1;
    }
}

/* Cover Page */

#cover-recto {
    display: block;
    flow: cover;
    text-align: center;
    page-break-inside:avoid;
    page-break-before: always;
}

#cover-author {
    display: block;
    -obfl-vertical-position:5;
    text-indent: 0;
}

#cover-title {
    display: block;
    margin-top: 2;
    text-indent: 0;
    -obfl-underline: ⠤; /* FIXME: add `text-indent: 0` in order to get rid of the two leading
                           underlined spaces, and also for better centering (similar for
                           p#cover-author, p.series, p.how-many-volumes, etc.) */
}

.series-ppp {
    display: block;
    text-indent: 0;
    margin-bottom:1;
}

frontmatter > #cover-recto > .series-sjw {
    display: block;
    text-indent: 0;
    -obfl-vertical-position:12;
}

/* Only display this block ("In ... Braillebänden") and the next
   ("Erster Band") when the book has more than 1 volumes.
   The same applies to "Erster Band" in the TOC */
frontmatter > level1 > .how-many-volumes {
    &::before {
	content: -obfl-evaluate('(if (= $volumes 1) "" "In ")');
    }
    &::after {
	&::before {
	    content: -obfl-evaluate('(if (= $volumes 1) "" $volumes)');
	    text-transform: volumes;
	}
	content: -obfl-evaluate('(if (= $volumes 1) "" " Braillebänden")');;
    }
    display: block;
    text-indent: 0;
    -obfl-vertical-position:16;
}

frontmatter > level1 > .which-volume {
    &::after {
	&::before {
	    content: -obfl-evaluate('(if (= $volumes 1) "" $volume)');
	    text-transform: volume;
	}
	content: -obfl-evaluate('(if (= $volumes 1) "" " Band")');;
    }
    display: block;
}

.publisher {
    display: block;
    text-indent: 0;
}

#cover-verso {
    display: block;
    flow: cover;
    page-break-before: always;
}

#copyright-blurb {
    display: block;
    text-indent: 0;
    -obfl-vertical-position:1;
}

#sjw-blurb {
    display: block;
    text-indent: 0;
    -obfl-vertical-position:1;
}

.flush-bottom {
    display: block;
    text-indent: 0;
    -obfl-vertical-align: before;
    -obfl-vertical-position: 27;
}

#cover-year {
    display: block;
    text-indent: 0;
    margin-top: 1;
}

frontmatter > .titlepage {
    display: block;
    flow: cover;
}

frontmatter > .titlepage > level2:first-child > p {
    display: block;
    text-align:center;
}

frontmatter > .titlepage > level2:nth-child(2) > p {
    display: block;
    margin-left:2;
    text-indent:-2;
}

.sourcePublisher {
    display: block;
    text-align:center;
    -obfl-vertical-position:26;
    page-break-after:always;
}

frontmatter > .titlepage > level2:first-child::before {
    display: block;
    text-align:center;
    white-space: pre-line;
    padding-top:5;
    margin-bottom:1;
    margin-left:4;
    margin-right:4;
    -obfl-underline: ⠤;
    content: string(docauthor) "\A\A\A" string(doctitle);
}

bodymatter {
    page: bodymatter;
    counter-set: page 1;
}

/*body|section*/[epub|type~='bodymatter'] {
    page: bodymatter;
    counter-set: page 1;
    ~ /*body|section*/[epub|type~='bodymatter'] {
        counter-set: none;
    }
}

/* Paragraphs
 *
 * A paragraph is a block element with no special features. */

p {
    display: block;
    text-indent: 2;
}

.precedingemptyline{
    margin-top:1;
}

p.precedingseparator {
    $separator-width: 6;
    text-indent: 0;
    &::before {
        content: "\A"                                            /* empty line */
                 repeat(" ", ($page-width - $separator-width)/2) /* centering */
                 repeat("⠒", $separator-width) "\A"              /* separator */
                 "\A"                                            /* empty line */
                 "  ";                                           /* text indent */
        white-space: pre-line;
        text-transform: none;
        hyphens: initial;
    }
}

.noindent {
    display: block;
    text-indent: 0;
}

pagenum {
    display: none;
    @if $show-print-page-numbers {
        string-set: print-page content(), print-page-slash content() '/';
    }
}

blockquote {
    margin-top:1;
    margin-bottom:1;
    margin-left:2;
}

poem,
[epub|type~='z3998:poem'] {
    display: block;
    margin-top: 1;
    margin-bottom: 1;
    margin-left: 2;
    line,
    p.line {
        display: block;
        margin-left: 2;
        text-indent: -2;
        page-break-inside: avoid;
    }
}

$linenum-space: 4;
$linenum-width: 2;

linegroup,
div.linegroup,
[epub|type~='z3998:verse'] {
    $margin-left: 2;
    $text-indent: -2;
    display: block;
    line,
    p.line {
        display: block;
        margin-left: $margin-left;
        text-indent: $text-indent;
        page-break-inside: avoid;
    }
    &:has(linenum) line {
        margin-left: $margin-left + $linenum-space;
        &:has(linenum) {
            text-indent: - $margin-left - $linenum-space;
            linenum {
                text-transform: linenum;
                &::after {
                    content: repeat(" ", $linenum-space - $linenum-width + $margin-left + $text-indent - 1) " ";
                    text-transform: none;
                    hyphens: initial;
                }
            }
        }
    }
}

linegroup + linegroup,
div.linegroup, [epub|type~='z3998:verse'] {
    + {
        div.linegroup, [epub|type~='z3998:verse'] {
            margin-top: 1;
        }
    }
}

/*
 * Depends on group-starting-with-linenum.xsl, which splits a p in .line spans
 * when it contains .linenum spans:
 * ~~~
 * <p>
 *   blah blah <span class="linenum">1</span> blah blah blah <span
 *   class="linenum">2</span> blah blah
 * </p>
 * ~~~
 * in the input becomes:
 * ~~~
 * <p>
 *   <span class="line">blah blah</span
 *   <span class="line"><span class="linenum">1</span> blah blah blah</span>
 *   <span class="line"><span class="linenum">2</span> blah blah</span>
 * </p>
 * ~~~
 * before any CSS is applied.
 */
p:has(span.line) {
    margin-left: $linenum-space;
    span.line {
        display: block;
        .linenum {
            text-transform: linenum;
            &::before {
                display: block;
                content: none;
            }
            &::after {
                content: repeat(" ", $linenum-space - $linenum-width - 1) " ";
                text-transform: none;
                hyphens: initial;
            }
        }
        &:first-child .linenum::after {
            /* "+2" is for p's text-indent */
            content: repeat(" ", $linenum-space - $linenum-width + 2 - 1) " ";
        }
    }
}

author, byline {
    display: block;
    text-align: right;
}

table.table-linearized,
table:not([class]) {
    display: block;
    margin-top: 1;
    margin-bottom: 1;
    tr {
        display: block;
        text-indent: -2;
        margin-left: 2;
    }
    tbody, tfoot {
        display: block;
        border-top: ⠒;
    }
    td + td::before,
    th + th::before {
        content:" ⠒⠒ ";
        text-transform: none;
        hyphens: initial;
    }
    caption{
        display: block;
        margin-bottom: 1;
    }
}

table.table-matrix {
    display: table;
    -obfl-table-col-spacing: 2;
    th {
	border-bottom: ⠒;
    }
    caption {
	display: block;
	margin-bottom: 1;
    }
}

table.table-matrix-transposed {
    display: table;
    -obfl-table-col-spacing: 2;
    render-table-by: column;
    caption {
	display: block;
	margin-bottom: 1;
    }
}

/*
 * It should normally not be necessary to use this rule because if you
 * add a class attribute on your table not equal to
 * "table-linearized", "table-matrix" or "table-matrix-transposed"
 * there is nothing to be reset. When you do need to use it make sure
 * the specificity of your rule is hight enough so that it overrides
 * the default rules. For example:
 *
 *     table:not([class]) {
 *        extend %table-reset
 *     }
 */
table%table-reset {
    display: initial;
    margin-top: initial;
    margin-bottom: initial;
    tr {
        display: initial;
        text-indent: inherit;
        margin-left: initial;
    }
    tbody, tfoot {
        display: initial;
        border-top: initial;
    }
    th {
        border-bottom: none;
    }
    td + td::before,
    th + th::before {
        content: initial;
        text-transform: inherit;
        hyphens: inherit;
    }
    caption {
        display: initial;
        margin-bottom: initial;
    }
}

imggroup > caption, imggroup > img {
    display:block;
    text-indent:-2;
    margin-left:2;
    margin-bottom:1;
}

if $include-production-notes {
    prodnote,
    aside[epub|type~='z3998:production'] {
        display:inline;
    }
    imggroup > prodnote {
        display:block;
    }
}

epigraph {
    margin-top:1;
    margin-bottom:1;
    margin-left:4;
    orphans:2;
}

imggroup {
    display:block;
    margin-top:1;
    margin-bottom:1;
    orphans:2;
}

/* Lists */


/* dl, dt, dd not working with css, according to BF we need a pre-processing step to implement that */
dl {
    display:block;
}

dt {
    display:inline;
}

dd {
    display:inline;
}

dt + dd {
    padding-left:1;
}

dd::after {
    display:block;
    white-space: pre-line;
    content: '\A';
}

list {
    margin-left: 2;
    text-indent: -2;
    margin-bottom: 1;
    counter-reset: list-item;
}

list list {
    margin-bottom: 0;
}

li {
    display:list-item;
}

list[type=ul], list list list[type=ul] {
    list-style-type: '⠠⠤';
}

list list[type=ul] {
    list-style-type: '⠐⠤';
}


list[type=ol] > li { 
    display: block;
    counter-increment: list-item;
    &::before {
        display: inline;
        content: "⠼" counter(list-item, symbols(numeric "⠴" "⠂" "⠆" "⠒" "⠲" "⠢" "⠖" "⠶" "⠦" "⠔")) " ";
        text-transform: none;
        hyphens: initial;
    }
}

/* TOCs are ordered lists too but need no numbering*/
#generated-document-toc li, #generated-volume-toc li {
    &::before {
        content: none;
    }
}

list[type=ol][enum="1"] {
    list-style-type: decimal;
}

list[type=ol][enum=A] {
    list-style-type: upper-latin;
}

list[type=ol][enum=I] {
    list-style-type: upper-roman;
}

list[type=ol][enum=a] {
    list-style-type: lower-latin;
}

list[type=ol][enum=i] {
    list-style-type: lower-roman;
}

br::before {
    white-space: pre-line;
    content: '\A';
}

sidebar {
    display:block;
    margin-left:1;
    orphans:2;
}

sidebar::before {
    display:block;
    margin-top:1;
    margin-left:-1;
    content:"⠏⠉⠉⠉";
    text-transform: none;
    hyphens: initial;
}

sidebar::after {
    display:block;
    margin-bottom:1;
    margin-left:-1;
    content:"⠧⠤⠤⠤";
    text-transform: none;
    hyphens: initial;
}

div {
    display: block;
}

